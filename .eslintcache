[{"G:\\IEEEMGTOOL\\ui\\src\\index.js":"1","G:\\IEEEMGTOOL\\ui\\src\\components\\UI\\FHtexthelp.js":"2","G:\\IEEEMGTOOL\\ui\\src\\shared\\consts.js":"3","G:\\IEEEMGTOOL\\ui\\src\\App.js":"4","G:\\IEEEMGTOOL\\ui\\src\\store\\reducers\\auth.js":"5","G:\\IEEEMGTOOL\\ui\\src\\containers\\Auth\\auth.js":"6","G:\\IEEEMGTOOL\\ui\\src\\store\\actions\\auth.js":"7","G:\\GitHub\\Jupyter-Frontend\\src\\App.js":"8","G:\\GitHub\\Jupyter-Frontend\\src\\store\\reducers\\alert.js":"9","G:\\GitHub\\Jupyter-Frontend\\src\\containers\\Auth\\auth.js":"10","G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\index.js":"11","G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\alert.js":"12","G:\\GitHub\\Jupyter-Frontend\\src\\containers\\Admin\\Users.js":"13","G:\\GitHub\\Jupyter-Frontend\\src\\api\\utils.js":"14","G:\\GitHub\\Jupyter-Frontend\\src\\components\\UI\\Table\\MaterialTable\\Table.js":"15","G:\\GitHub\\Jupyter-Frontend\\src\\helpers\\tableIcons.js":"16","G:\\GitHub\\Jupyter-Frontend\\src\\axios-DB.js":"17","G:\\GitHub\\Jupyter-Frontend\\src\\shared\\consts.js":"18","G:\\GitHub\\Jupyter-Frontend\\src\\index.js":"19","G:\\GitHub\\Jupyter-Frontend\\src\\store\\reducers\\auth.js":"20","G:\\GitHub\\Jupyter-Frontend\\src\\shared\\utility.js":"21","G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\actionTypes.js":"22","G:\\GitHub\\Jupyter-Frontend\\src\\shared\\validate.js":"23","G:\\GitHub\\Jupyter-Frontend\\src\\helpers\\uiHelpers.js":"24","G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\auth.js":"25","G:\\GitHub\\Jupyter-Frontend\\src\\serviceWorker.js":"26","G:\\GitHub\\Jupyter-Frontend\\src\\components\\UI\\FHtexthelp.js":"27","G:\\GitHub\\Jupyter-Frontend\\src\\api\\Users.js":"28","G:\\GitHub\\Jupyter-Frontend\\src\\shared\\routes.js":"29","G:\\GitHub\\Jupyter-Frontend\\src\\containers\\Admin\\userReg.js":"30"},{"size":1230,"mtime":1611570005183,"results":"31","hashOfConfig":"32"},{"size":567,"mtime":1611570114915,"results":"33","hashOfConfig":"32"},{"size":304,"mtime":1611574183116,"results":"34","hashOfConfig":"32"},{"size":556,"mtime":1611569607144,"results":"35","hashOfConfig":"32"},{"size":1673,"mtime":1611496064150,"results":"36","hashOfConfig":"32"},{"size":5794,"mtime":1611747568935,"results":"37","hashOfConfig":"32"},{"size":3371,"mtime":1611506054781,"results":"38","hashOfConfig":"32"},{"size":792,"mtime":1613362382663,"results":"39","hashOfConfig":"40"},{"size":1011,"mtime":1611470462574,"results":"41","hashOfConfig":"40"},{"size":5794,"mtime":1611747568935,"results":"42","hashOfConfig":"40"},{"size":136,"mtime":1611470457353,"results":"43","hashOfConfig":"40"},{"size":309,"mtime":1609730397622,"results":"44","hashOfConfig":"40"},{"size":5937,"mtime":1613417650507,"results":"45","hashOfConfig":"40"},{"size":1032,"mtime":1613197679896,"results":"46","hashOfConfig":"40"},{"size":512,"mtime":1610179596324,"results":"47","hashOfConfig":"40"},{"size":2256,"mtime":1609785919269,"results":"48","hashOfConfig":"40"},{"size":160,"mtime":1613199105294,"results":"49","hashOfConfig":"40"},{"size":304,"mtime":1613209268605,"results":"50","hashOfConfig":"40"},{"size":1230,"mtime":1611570005183,"results":"51","hashOfConfig":"40"},{"size":1673,"mtime":1611496064150,"results":"52","hashOfConfig":"40"},{"size":3406,"mtime":1611486747591,"results":"53","hashOfConfig":"40"},{"size":252,"mtime":1609730397621,"results":"54","hashOfConfig":"40"},{"size":987,"mtime":1611470441387,"results":"55","hashOfConfig":"40"},{"size":1207,"mtime":1611570169841,"results":"56","hashOfConfig":"40"},{"size":3371,"mtime":1613197751904,"results":"57","hashOfConfig":"40"},{"size":5485,"mtime":1610353715018,"results":"58","hashOfConfig":"40"},{"size":567,"mtime":1611570114915,"results":"59","hashOfConfig":"40"},{"size":416,"mtime":1613422383672,"results":"60","hashOfConfig":"40"},{"size":111,"mtime":1613362311760,"results":"61","hashOfConfig":"40"},{"size":19340,"mtime":1613423303940,"results":"62","hashOfConfig":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"47x0aq",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"13rcx4m",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\IEEEMGTOOL\\ui\\src\\index.js",[],"G:\\IEEEMGTOOL\\ui\\src\\components\\UI\\FHtexthelp.js",[],"G:\\IEEEMGTOOL\\ui\\src\\shared\\consts.js",[],"G:\\IEEEMGTOOL\\ui\\src\\App.js",[],"G:\\IEEEMGTOOL\\ui\\src\\store\\reducers\\auth.js",[],"G:\\IEEEMGTOOL\\ui\\src\\containers\\Auth\\auth.js",["130"],"G:\\IEEEMGTOOL\\ui\\src\\store\\actions\\auth.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\App.js",[],["131","132"],"G:\\GitHub\\Jupyter-Frontend\\src\\store\\reducers\\alert.js",[],["133","134"],"G:\\GitHub\\Jupyter-Frontend\\src\\containers\\Auth\\auth.js",["135"],"import React, { useState, useCallback, useEffect}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { checkValidity } from '../../shared/validate';\r\nimport { updateObject } from '../../shared/utility';\r\nimport { buildTextFields } from '../../helpers/uiHelpers';\r\nimport { auth } from '../../store/actions/index';\r\nimport { addAlert } from '../../store/actions/index';\r\nimport * as routez from '../../shared/routes';\r\n\r\n\r\nconst inputDefinitions = {\r\n    gmail: {\r\n        label: 'Email*',\r\n        validations: {\r\n            required: true,\r\n            isEmail: true,\r\n            validationErrStr: 'Enter a valid email',\r\n        }\r\n    },\r\n    password: {\r\n        label: 'Password*',\r\n        type: 'password',\r\n        validations: {\r\n            required: true,\r\n            minLength: 2,\r\n            maxLength: 40,\r\n            validationErrStr: 'Use between 6 and 40 characters for your password',\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  loginInput: {\r\n    width: '100%',\r\n    marginTop: '20px',\r\n    color: 'white'\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [inputIsValid, setInputIsValid] = useState({\r\n        gmail: true,\r\n        password: true\r\n    });\r\n\r\n    const [authObj, setAuthObj] = useState({\r\n        gmail: '',\r\n        password: ''\r\n    });\r\n\r\n    const inputProperties = {\r\n        gmail: {\r\n            styleClass: classes.loginInput\r\n        },\r\n        password: {\r\n            styleClass: classes.loginInput\r\n        }\r\n    };\r\n\r\n    const checkInputValidity = useCallback((inputId, newValue) => {\r\n        let isValid = true;\r\n        let validationConst = inputDefinitions[inputId].validations;\r\n        isValid = checkValidity(validationConst, newValue ? newValue : authObj[inputId])\r\n\r\n        return isValid;\r\n    }, [authObj])\r\n\r\n    const inputChangeHandler = useCallback((event, inputId) => {\r\n        let validationConst = inputDefinitions[inputId].validations;\r\n        let isValid = checkValidity(validationConst, event.target.value);\r\n        setInputIsValid(updateObject(inputIsValid, { [inputId]: isValid }));\r\n        setAuthObj(updateObject(authObj, { [inputId]: event.target.value }))\r\n    }, [authObj, inputIsValid]);\r\n\r\n    let inputFields = buildTextFields(inputDefinitions, inputProperties, inputChangeHandler, inputIsValid);\r\n\r\n    const onSubmitHandler = useCallback((event) => {\r\n        event.preventDefault()\r\n\r\n        let localInputIsValid = { ...inputIsValid };\r\n        localInputIsValid['gmail'] = checkInputValidity('gmail');\r\n        localInputIsValid['password'] = checkInputValidity('password');\r\n        setInputIsValid(localInputIsValid);\r\n\r\n        if (localInputIsValid['gmail'] && localInputIsValid['password']) {\r\n            props.onAuth(\r\n                authObj.gmail,\r\n                authObj.password\r\n            );\r\n        }\r\n    }, [authObj, checkInputValidity, inputIsValid, props]);\r\n\r\n    const authError = props.error;\r\n    useEffect(() => {\r\n        if (authError) {\r\n            alert(authError)\r\n        }\r\n    }, [authError,history]);\r\n\r\n    // if (props.isAuthenticated){\r\n\r\n    // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div className={classes.paper}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div >\r\n                    <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={onSubmitHandler}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography variant=\"h5\">\r\n                            Sign In\r\n                        </Typography>\r\n                        {inputFields}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        isAuthenticated: state.auth.token != null,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        usertype:state.auth.usertype,\r\n        stationID:state.auth.stationID,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (gmail, password) => dispatch(auth(gmail, password)),\r\n        addAlert: (alert) => dispatch(addAlert(alert))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);",["136","137"],"G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\index.js",[],["138","139"],"G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\alert.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\containers\\Admin\\Users.js",["140"],"G:\\GitHub\\Jupyter-Frontend\\src\\api\\utils.js",[],["141","142"],"G:\\GitHub\\Jupyter-Frontend\\src\\components\\UI\\Table\\MaterialTable\\Table.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\helpers\\tableIcons.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\axios-DB.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\shared\\consts.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\index.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\store\\reducers\\auth.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\shared\\utility.js",["143"],"export const INDEX = 'INDEX';\r\n\r\n/**\r\n * Used to update objects immutabaly \r\n * @param {object} object the original JS object\r\n * @param {object} updates updates to be made\r\n */\r\nexport const updateObject = (object, updates) => {\r\n    return {\r\n        ...object,\r\n        ...updates\r\n    };\r\n};\r\n\r\n/**\r\n * Used to update an array immutabaly \r\n * @param {array} array the original JS array\r\n * @param {object} item item to be added\r\n */\r\nexport const addItemToArray = (array, item) => {\r\n    let newArray = [...array];\r\n    newArray.push(item)\r\n    return newArray;\r\n}\r\n\r\n\r\nexport const addItemRemoveDuplicate = (idtype,array,newarr) =>{\r\n    let result = [];\r\n    newarr.forEach(item => {\r\n        let index = array.findIndex(entry => entry[idtype] == item[idtype] )\r\n        if(index<0){\r\n            result.push(item)\r\n        }\r\n    })\r\n    return result;\r\n}\r\n/**\r\n * Used to remve item from an array immutabaly \r\n * @param {array} array the original JS array\r\n * @param {string} fieldName name of the field to identify the object from\r\n * @param {value} value value of the field\r\n */\r\nexport const removeItemFromArray = (array, fieldName, value) => {\r\n    if (fieldName === INDEX) {\r\n        let arr = array.filter((item, index) => {\r\n            return index !== value;\r\n        });\r\n\r\n        return arr;\r\n    }\r\n    let newArr = array.filter((item) => {\r\n        return item[fieldName] !== value;\r\n    });\r\n\r\n    return newArr;\r\n}\r\n\r\n/**\r\n * Used to replace item from an array immutabaly \r\n * @param {array} array the original JS array\r\n * @param {string} fieldName name of the field to identify the object from\r\n * @param {value} value item to be assigned\r\n */\r\nexport const replaceItemInArray = (array, fieldName, newItem, index) => {\r\n    if (fieldName === INDEX) {\r\n        let newArray = [...array];\r\n        newArray[index] = newItem;\r\n        return newArray;\r\n    } else {\r\n        return array.map((item) => {\r\n            if (item[fieldName] === newItem[fieldName]) {\r\n                return newItem;\r\n            }\r\n            return item;\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a promise which will resolve after a given number of milliseconds\r\n * @param {number} milliseconds the original JS array\r\n */\r\nexport const sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n}\r\n\r\n/**\r\n * Returns a boolean given an object containing the validity status of each input\r\n * @param {object} inputIsValid a js object with validity info of a function\r\n */\r\nexport const formIsValid = (inputIsValid) => {\r\n    let isValid = true;\r\n    Object.values(inputIsValid).forEach((value) => {\r\n        isValid = isValid && value;\r\n    });\r\n\r\n    return isValid\r\n};\r\n\r\n/**\r\n * Returns a string with the first letter capitalized\r\n * @param {string} string a string\r\n */\r\nexport const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\n/**\r\n * This method can be used to extract a \r\n * nested value from an object given a string path\r\n * eg: \"client.name\"\r\n * @param {object} obj \r\n * @param {string} path \r\n */\r\nexport const getNestedValueByPath = (obj, path) => {\r\n    let pathArray = path.split('.');\r\n    let value = { ...obj };\r\n    for (let i = 0; i < pathArray.length; i++) {\r\n        value = value[pathArray[i]]\r\n        if (!value) {\r\n            break;\r\n        }\r\n    }\r\n    return value;\r\n}","G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\actionTypes.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\shared\\validate.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\helpers\\uiHelpers.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\store\\actions\\auth.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\serviceWorker.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\components\\UI\\FHtexthelp.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\api\\Users.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\shared\\routes.js",[],"G:\\GitHub\\Jupyter-Frontend\\src\\containers\\Admin\\userReg.js",["144","145"],{"ruleId":"146","severity":1,"message":"147","line":18,"column":13,"nodeType":"148","messageId":"149","endLine":18,"endColumn":19},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"152","replacedBy":"155"},{"ruleId":"146","severity":1,"message":"147","line":18,"column":13,"nodeType":"148","messageId":"149","endLine":18,"endColumn":19},{"ruleId":"150","replacedBy":"156"},{"ruleId":"152","replacedBy":"157"},{"ruleId":"150","replacedBy":"158"},{"ruleId":"152","replacedBy":"159"},{"ruleId":"146","severity":1,"message":"160","line":24,"column":9,"nodeType":"148","messageId":"149","endLine":24,"endColumn":16},{"ruleId":"150","replacedBy":"161"},{"ruleId":"152","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":30,"column":60,"nodeType":"165","messageId":"166","endLine":30,"endColumn":62},{"ruleId":"167","severity":1,"message":"168","line":247,"column":8,"nodeType":"169","endLine":247,"endColumn":10,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":449,"column":176,"nodeType":"173","endLine":449,"endColumn":192},"no-unused-vars","'routez' is defined but never used.","Identifier","unusedVar","no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],["174"],["175"],["174"],["175"],"'history' is assigned a value but never used.",["174"],["175"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'addAlert', 'branch', 'contactnumber', 'dep', 'email', 'empstatus', 'firstname', 'gender', 'jobname', 'lastname', 'martialstate', 'paygrade', 'selectedDate', 'state', and 'supID'. Either include them or remove the dependency array.","ArrayExpression",["176"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [addAlert, branch, contactnumber, dep, email, empstatus, firstname, gender, jobname, lastname, martialstate, paygrade, selectedDate, state, supID]",{"range":"179","text":"180"},[7458,7460],"[addAlert, branch, contactnumber, dep, email, empstatus, firstname, gender, jobname, lastname, martialstate, paygrade, selectedDate, state, supID]"]